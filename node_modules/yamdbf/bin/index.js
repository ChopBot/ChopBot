'use babel';
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.version = exports.Util = exports.CommandDispatcher = exports.CommandRegistry = exports.CommandLoader = exports.Command = exports.LocalStorage = exports.GuildStorageRegistry = exports.GuildStorageLoader = exports.GuildStorage = exports.Bot = undefined;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _Bot2 = require('./lib/bot/Bot');

var _Bot3 = _interopRequireDefault(_Bot2);

var _GuildStorage2 = require('./lib/storage/GuildStorage');

var _GuildStorage3 = _interopRequireDefault(_GuildStorage2);

var _GuildStorageLoader2 = require('./lib/storage/GuildStorageLoader');

var _GuildStorageLoader3 = _interopRequireDefault(_GuildStorageLoader2);

var _GuildStorageRegistry2 = require('./lib/storage/GuildStorageRegistry');

var _GuildStorageRegistry3 = _interopRequireDefault(_GuildStorageRegistry2);

var _LocalStorage2 = require('./lib/storage/LocalStorage');

var _LocalStorage3 = _interopRequireDefault(_LocalStorage2);

var _Command2 = require('./lib/command/Command');

var _Command3 = _interopRequireDefault(_Command2);

var _CommandLoader2 = require('./lib/command/CommandLoader');

var _CommandLoader3 = _interopRequireDefault(_CommandLoader2);

var _CommandRegistry2 = require('./lib/command/CommandRegistry');

var _CommandRegistry3 = _interopRequireDefault(_CommandRegistry2);

var _CommandDispatcher2 = require('./lib/command/CommandDispatcher');

var _CommandDispatcher3 = _interopRequireDefault(_CommandDispatcher2);

var _Util2 = require('./lib/Util');

var _Util3 = _interopRequireDefault(_Util2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Function.prototype.$asyncbind = function anonymous(self, catcher) {
  var resolver = this;

  if (catcher === true) {
    if (!Function.prototype.$asyncbind.EagerThenable) Function.prototype.$asyncbind.EagerThenable = function factory(tick) {
      var _tasks = [];

      if (!tick) {
        try {
          tick = process.nextTick;
        } catch (ex) {
          tick = function tick(p) {
            setTimeout(p, 0);
          };
        }
      }

      function _untask() {
        for (var i = 0; i < _tasks.length; i += 2) {
          var t = _tasks[i + 1],
              r = _tasks[i];

          for (var j = 0; j < t.length; j++) t[j].call(null, r);
        }

        _tasks = [];
      }

      function isThenable(obj) {
        return obj && obj instanceof Object && typeof obj.then === 'function';
      }

      function EagerThenable(resolver) {
        function done(inline) {
          var w;
          if (_sync || phase < 0 || (w = _thens[phase]).length === 0) return;

          _tasks.push(result, w);

          _thens = [[], []];
          if (_tasks.length === 2) inline ? _untask() : tick(_untask);
        }

        function resolveThen(x) {
          if (phase >= 0) return;
          if (isThenable(x)) return x.then(resolveThen, rejectThen);
          phase = 0;
          result = x;
          done(true);
        }

        function rejectThen(x) {
          if (phase >= 0) return;
          if (isThenable(x)) return x.then(resolveThen, rejectThen);
          phase = 1;
          result = x;
          done(true);
        }

        function settler(resolver, rejecter) {
          _thens[0].push(resolver);

          _thens[1].push(rejecter);

          done();
        }

        function toString() {
          return 'EagerThenable{' + {
            '-1': 'pending',
            0: 'resolved',
            1: 'rejected'
          }[phase] + '}=' + result.toString();
        }

        function guard() {
          try {
            resolver.call(null, resolveThen, rejectThen);
          } catch (ex) {
            rejectThen(ex);
          }
        }

        this.then = settler;
        this.toString = toString;
        var _thens = [[], []],
            _sync = true,
            phase = -1,
            result;
        guard();
        _sync = false;
        done();
      }

      EagerThenable.resolve = function (v) {
        return isThenable(v) ? v : {
          then: function then(resolve, reject) {
            return resolve(v);
          }
        };
      };

      return EagerThenable;
    }();
    return new Function.prototype.$asyncbind.EagerThenable(boundThen);
  }

  if (catcher) {
    if (Function.prototype.$asyncbind.wrapAsyncStack) catcher = Function.prototype.$asyncbind.wrapAsyncStack(catcher);
    return then;
  }

  function then(result, error) {
    try {
      return result && result instanceof Object && typeof result.then === 'function' ? result.then(then, catcher) : resolver.call(self, result, error || catcher);
    } catch (ex) {
      return (error || catcher)(ex);
    }
  }

  function boundThen(result, error) {
    return resolver.call(self, result, error);
  }

  boundThen.then = boundThen;
  return boundThen;
};

/** @exports Bot */
const Bot = exports.Bot = _Bot3.default;
exports.default = Bot;

/** @exports GuildStorage */

const GuildStorage = exports.GuildStorage = _GuildStorage3.default;

/** @exports GuildStorageLoader */
const GuildStorageLoader = exports.GuildStorageLoader = _GuildStorageLoader3.default;

/** @exports GuildStorageRegistry */
const GuildStorageRegistry = exports.GuildStorageRegistry = _GuildStorageRegistry3.default;

/** @exports LocalStorage */
const LocalStorage = exports.LocalStorage = _LocalStorage3.default;

/** @exports Command */
const Command = exports.Command = _Command3.default;

/** @exports CommandLoader */
const CommandLoader = exports.CommandLoader = _CommandLoader3.default;

/** @exports CommandRegistry */
const CommandRegistry = exports.CommandRegistry = _CommandRegistry3.default;

/** @exports CommandDispatcher */
const CommandDispatcher = exports.CommandDispatcher = _CommandDispatcher3.default;

/** @exports Util */
const Util = exports.Util = _Util3.default;

/** @exports version */
const version = exports.version = require(_path2.default.join(__dirname, '..', 'package')).version;

/** @external {Client} See: {@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/class/Client} */
/** @external {ClientOptions} See: {@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/typedef/ClientOptions} */
/** @external {Collection} See: {@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/class/Collection} */
/** @external {Guild} See: {@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/class/Guild} */
/** @external {Message} See: {@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/class/Message} */
/** @external {User} See: {@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/class/User} */
/** @external {PermissionResolvable} See: {@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/typedef/PermissionResolvable} */